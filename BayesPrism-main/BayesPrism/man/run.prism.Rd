\name{run.prism}
\alias{run.prism}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
Main function to Run BayesPrism
}
\description{
Runs all steps (1-4) of BayesPrism by default. Requires a prism object generated by the new.prism function.
}
\usage{
run.prism (prism,
           n.cores=1,
           update.gibbs=TRUE,
           gibbs.control=list(),
           opt.control=list())
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{prism}{A prism object generated by the new.prism function. }
  \item{n.cores}{number of cores to use. Default =1. If needs to set different number of cores for Gibbs sampling and optimization. Supply n.cores in gibbs.control and opt.control}
  \item{update.gibbs}{A logical variable to denote whether run final Gibbs sampling to update theta. Default=TRUE.}
  \item{gibbs.control}{A named list containing parameters of the Gibbs sampler.
  
                       chain.length: length of MCMC chain. Default=1000;
                       
                       burn.in: length of burn in period. Default=500;
                       
                       thinning: retain every # of MCMC samples after the burn in period to reduce auto-correlation. Default=2;
                       
                       n.cores: number of cores to use. Default uses n.cores in the main argument;<br/>
                       
                       seed: seed number to use for repoducibility. Default = 123. Set to NULL if use pseudo-random;<br/>
                       
                       alpha: a numeric vector to represent the parameter of dirichlet distribution. Default=1. Set to max(1,user.alpha) when setting pseudo.min=0 to prevent numerical issues. }
  \item{opt.control}{A list containing parameters for the optimization step:
                     
                     maxit: maximum number of cycles to interate. Default=100000;
                     
                     sigma: hyper-parameter of the prior if optimizer="paper". Default=2;
                     
                     optimizer: a character string to denote which algorithm to use. "MAP": the one used by the BayesPrism paper, with cell type-specific gamma under a log-normal prior; "MLE": the new algorithm that models a single gamma across cell types. Useful when some cell types are low in Z_k, e.g. spatial data. Default to "MAP".
                     
                     other arguments passed to Rcgmin.}
}
\details{
There are two optimizers available for use. The optimizer "paper" is the one used by the BayesPrism paper, which models a prior distribution with a log-fold change of mean zero and a variance specified by a hyper-parameter sigma (=2 by default). The optimizer "EB" is incorporated by the new package, which models a prior distribution with a log-fold change of mean and variance fitted using an empirical Bayes-like approach, which is shared by all cell types. In theory, “EB” will result in a shrinkage property, and may improve the updated reference for cell types of low fraction in the bulk. In TCGA-GBM, these two optimizers yield near identical estimates.
}
\value{
Outputs An S4 object of the class "BayesPrism", with the following slots:

prism: An S4 object of the class "prism" to represent the input prism object;

posterior.initial.cellState: An S4 object of the class "jointPost" to represent the posterior mean of cell state fraction and cell state expression outputted by the initial Gibbs sampling using cell state pirors. Contains Z (inferred expression), theta (inferred fraction) and theta.cv (coefficient of variation of posterior of theta);

posterior.initial.cellType: An S4 object of the class "jointPost" to represent the posterior sum of cell states from each cell type (posterior.initial.cellState);

reference.update: An S4 obejct of the class "reference" to represent the updated profile \eqn{\psi};

posterior.theta_f:  An S4 object of the class "thetaPost" to represent the updated cell type fraction. Contains theta (inferred fraction) and theta.cv (coefficient of variation of posterior of theta);

control_param: A list storing the gibbs.control, opt.control and update.gibbs arguments. 
}
\references{
Rcgmin: Conjugate Gradient Minimization of Nonlinear Functions with Box Constraints https://CRAN.R-project.org/package=Rcgmin
}

